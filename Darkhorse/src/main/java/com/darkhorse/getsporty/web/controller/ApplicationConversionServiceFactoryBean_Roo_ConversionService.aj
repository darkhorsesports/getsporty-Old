// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.darkhorse.getsporty.web.controller;

import com.darkhorse.getsporty.domain.Academy;
import com.darkhorse.getsporty.domain.Coach;
import com.darkhorse.getsporty.domain.Employee;
import com.darkhorse.getsporty.domain.Event;
import com.darkhorse.getsporty.domain.Job;
import com.darkhorse.getsporty.domain.Player;
import com.darkhorse.getsporty.domain.User;
import com.darkhorse.getsporty.domain.UserRole;
import com.darkhorse.getsporty.svc.UserRoleSvc;
import com.darkhorse.getsporty.svc.UserSvc;
import com.darkhorse.getsporty.svc.abc.EmployeeSvc;
import com.darkhorse.getsporty.svc.academy.AcademySvc;
import com.darkhorse.getsporty.svc.coach.CoachSvc;
import com.darkhorse.getsporty.svc.event.EventSvc;
import com.darkhorse.getsporty.svc.job.JobSvc;
import com.darkhorse.getsporty.svc.player.PlayerSvc;
import com.darkhorse.getsporty.web.controller.ApplicationConversionServiceFactoryBean;
import java.math.BigInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AcademySvc ApplicationConversionServiceFactoryBean.academySvc;
    
    @Autowired
    CoachSvc ApplicationConversionServiceFactoryBean.coachSvc;
    
    @Autowired
    EmployeeSvc ApplicationConversionServiceFactoryBean.employeeSvc;
    
    @Autowired
    EventSvc ApplicationConversionServiceFactoryBean.eventSvc;
    
    @Autowired
    JobSvc ApplicationConversionServiceFactoryBean.jobSvc;
    
    @Autowired
    PlayerSvc ApplicationConversionServiceFactoryBean.playerSvc;
    
    @Autowired
    UserSvc ApplicationConversionServiceFactoryBean.userSvc;
    
    @Autowired
    UserRoleSvc ApplicationConversionServiceFactoryBean.userRoleSvc;
    
    public Converter<Academy, String> ApplicationConversionServiceFactoryBean.getAcademyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.darkhorse.getsporty.domain.Academy, java.lang.String>() {
            public String convert(Academy academy) {
                return new StringBuilder().append(academy.getAbout()).append(' ').append(academy.getVisibility()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Academy> ApplicationConversionServiceFactoryBean.getIdToAcademyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.darkhorse.getsporty.domain.Academy>() {
            public com.darkhorse.getsporty.domain.Academy convert(java.math.BigInteger id) {
                return academySvc.findAcademy(id);
            }
        };
    }
    
    public Converter<String, Academy> ApplicationConversionServiceFactoryBean.getStringToAcademyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.darkhorse.getsporty.domain.Academy>() {
            public com.darkhorse.getsporty.domain.Academy convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Academy.class);
            }
        };
    }
    
    public Converter<Coach, String> ApplicationConversionServiceFactoryBean.getCoachToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.darkhorse.getsporty.domain.Coach, java.lang.String>() {
            public String convert(Coach coach) {
                return new StringBuilder().append(coach.getAbout()).append(' ').append(coach.getVisibility()).append(' ').append(coach.getDOB()).append(' ').append(coach.getPlayerLevel()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Coach> ApplicationConversionServiceFactoryBean.getIdToCoachConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.darkhorse.getsporty.domain.Coach>() {
            public com.darkhorse.getsporty.domain.Coach convert(java.math.BigInteger id) {
                return coachSvc.findCoach(id);
            }
        };
    }
    
    public Converter<String, Coach> ApplicationConversionServiceFactoryBean.getStringToCoachConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.darkhorse.getsporty.domain.Coach>() {
            public com.darkhorse.getsporty.domain.Coach convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Coach.class);
            }
        };
    }
    
    public Converter<Employee, String> ApplicationConversionServiceFactoryBean.getEmployeeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.darkhorse.getsporty.domain.Employee, java.lang.String>() {
            public String convert(Employee employee) {
                return new StringBuilder().append(employee.getName()).append(' ').append(employee.getAge()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Employee> ApplicationConversionServiceFactoryBean.getIdToEmployeeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.darkhorse.getsporty.domain.Employee>() {
            public com.darkhorse.getsporty.domain.Employee convert(java.math.BigInteger id) {
                return employeeSvc.findEmployee(id);
            }
        };
    }
    
    public Converter<String, Employee> ApplicationConversionServiceFactoryBean.getStringToEmployeeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.darkhorse.getsporty.domain.Employee>() {
            public com.darkhorse.getsporty.domain.Employee convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Employee.class);
            }
        };
    }
    
    public Converter<Event, String> ApplicationConversionServiceFactoryBean.getEventToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.darkhorse.getsporty.domain.Event, java.lang.String>() {
            public String convert(Event event) {
                return new StringBuilder().append(event.getTitle()).append(' ').append(event.getDescription()).append(' ').append(event.getLocation()).append(' ').append(event.getOrganizer()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Event> ApplicationConversionServiceFactoryBean.getIdToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.darkhorse.getsporty.domain.Event>() {
            public com.darkhorse.getsporty.domain.Event convert(java.math.BigInteger id) {
                return eventSvc.findEvent(id);
            }
        };
    }
    
    public Converter<String, Event> ApplicationConversionServiceFactoryBean.getStringToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.darkhorse.getsporty.domain.Event>() {
            public com.darkhorse.getsporty.domain.Event convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Event.class);
            }
        };
    }
    
    public Converter<Job, String> ApplicationConversionServiceFactoryBean.getJobToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.darkhorse.getsporty.domain.Job, java.lang.String>() {
            public String convert(Job job) {
                return new StringBuilder().append(job.getTitle()).append(' ').append(job.getOrganization()).append(' ').append(job.getDescription()).append(' ').append(job.getExperience()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Job> ApplicationConversionServiceFactoryBean.getIdToJobConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.darkhorse.getsporty.domain.Job>() {
            public com.darkhorse.getsporty.domain.Job convert(java.math.BigInteger id) {
                return jobSvc.findJob(id);
            }
        };
    }
    
    public Converter<String, Job> ApplicationConversionServiceFactoryBean.getStringToJobConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.darkhorse.getsporty.domain.Job>() {
            public com.darkhorse.getsporty.domain.Job convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Job.class);
            }
        };
    }
    
    public Converter<Player, String> ApplicationConversionServiceFactoryBean.getPlayerToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.darkhorse.getsporty.domain.Player, java.lang.String>() {
            public String convert(Player player) {
                return new StringBuilder().append(player.getAbout()).append(' ').append(player.getVisibility()).append(' ').append(player.getDOB()).append(' ').append(player.getPlayerLevel()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Player> ApplicationConversionServiceFactoryBean.getIdToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.darkhorse.getsporty.domain.Player>() {
            public com.darkhorse.getsporty.domain.Player convert(java.math.BigInteger id) {
                return playerSvc.findPlayer(id);
            }
        };
    }
    
    public Converter<String, Player> ApplicationConversionServiceFactoryBean.getStringToPlayerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.darkhorse.getsporty.domain.Player>() {
            public com.darkhorse.getsporty.domain.Player convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Player.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.darkhorse.getsporty.domain.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getName()).append(' ').append(user.getEmail()).append(' ').append(user.getPasswd()).append(' ').append(user.getCreated()).toString();
            }
        };
    }
    
    public Converter<BigInteger, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.darkhorse.getsporty.domain.User>() {
            public com.darkhorse.getsporty.domain.User convert(java.math.BigInteger id) {
                return userSvc.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.darkhorse.getsporty.domain.User>() {
            public com.darkhorse.getsporty.domain.User convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), User.class);
            }
        };
    }
    
    public Converter<UserRole, String> ApplicationConversionServiceFactoryBean.getUserRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.darkhorse.getsporty.domain.UserRole, java.lang.String>() {
            public String convert(UserRole userRole) {
                return new StringBuilder().append(userRole.getCode()).append(' ').append(userRole.getDescription()).toString();
            }
        };
    }
    
    public Converter<BigInteger, UserRole> ApplicationConversionServiceFactoryBean.getIdToUserRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.darkhorse.getsporty.domain.UserRole>() {
            public com.darkhorse.getsporty.domain.UserRole convert(java.math.BigInteger id) {
                return userRoleSvc.findUserRole(id);
            }
        };
    }
    
    public Converter<String, UserRole> ApplicationConversionServiceFactoryBean.getStringToUserRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.darkhorse.getsporty.domain.UserRole>() {
            public com.darkhorse.getsporty.domain.UserRole convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), UserRole.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAcademyToStringConverter());
        registry.addConverter(getIdToAcademyConverter());
        registry.addConverter(getStringToAcademyConverter());
        registry.addConverter(getCoachToStringConverter());
        registry.addConverter(getIdToCoachConverter());
        registry.addConverter(getStringToCoachConverter());
        registry.addConverter(getEmployeeToStringConverter());
        registry.addConverter(getIdToEmployeeConverter());
        registry.addConverter(getStringToEmployeeConverter());
        registry.addConverter(getEventToStringConverter());
        registry.addConverter(getIdToEventConverter());
        registry.addConverter(getStringToEventConverter());
        registry.addConverter(getJobToStringConverter());
        registry.addConverter(getIdToJobConverter());
        registry.addConverter(getStringToJobConverter());
        registry.addConverter(getPlayerToStringConverter());
        registry.addConverter(getIdToPlayerConverter());
        registry.addConverter(getStringToPlayerConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
        registry.addConverter(getUserRoleToStringConverter());
        registry.addConverter(getIdToUserRoleConverter());
        registry.addConverter(getStringToUserRoleConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
